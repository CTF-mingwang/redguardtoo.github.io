<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Chen's blog (Posts about wordpress)</title><link>http://blog.binchen.org/</link><description></description><atom:link href="http://blog.binchen.org/categories/wordpress.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Wed, 28 Jun 2017 12:22:19 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Migrate blog from wordpress into nikola</title><link>http://blog.binchen.org/posts/migrate-blog-from-wordpress-into-nikola.html</link><dc:creator>Chen Bin</dc:creator><description>&lt;div&gt;&lt;p&gt;
CREATED: &lt;span class="timestamp-wrapper"&gt;&lt;span class="timestamp"&gt;&amp;lt;2014-04-22&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/p&gt;

&lt;p&gt;
UPDATED: &lt;span class="timestamp-wrapper"&gt;&lt;span class="timestamp"&gt;&amp;lt;2017-06-28 Wed&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/p&gt;

&lt;p&gt;
If you are only interested in web page optimization, jump to the end of the article.
&lt;/p&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h3 id="sec-1"&gt;&lt;span class="section-number-2"&gt;1&lt;/span&gt; Migrate from WordPress to Nikola&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-bash"&gt;# you might need need `sudo apt-get install python-gdbm` on Debian
# install python2 and make sure sqlite is supported
sudo USE="sqlite" emerge -a =python-2* # Gentoo Linux

# one debian/ubuntu, you need: `apt-get install libxml2-dev libxslt1-dev python-dev libjpeg-dev` for lxml

# Not to mess up with root
export PATH=$PATH:$HOME/.local/bin

# Best way to get latest pip,
# see https://packaging.python.org/installing/#install-pip-setuptools-and-wheel
python ~/bin/get-pip.py --user # ~/.local/bin/pip

# install dependencies (requests is required by zen theme)
# sudo pip install markdown webassets phpserialize nikola requests
# "sudo pip install" could screw up my python setup on Gentoo Linux
# @see https://forums.gentoo.org/viewtopic-t-1006044-view-next.html?sid=931f7be2c16ac99fd85eb2940c0bf82b
# so install the python packages in my HOME directory might be better
# @see http://stackoverflow.com/questions/2915471/install-a-python-package-into-a-different-directory-using-pip
pip install --user markdown webassets phpserialize nikola requests

# create root directory of nikola
mkdir -p ~/.config/nikola;cd ~/.config/nikola

# import from wordpress dump
nicola import_wordpress my_wordpress_dump.xml

# since I use zen theme, I need install lessc
# obviously NodeJS is required
npm install -g less # use portable nodejs in $HOME is better

# I use zen theme, before intalling new theme, clean the legacy theme at first
rm -rf themes/zen/;nikola install_theme zen
# or rm -rf themes/zen/; http_proxy=http://127.0.0.1:8087 nikola install_theme zen at mainland China

# build the web site
nikola build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
Use below command to fix embedded code in HTML files:
&lt;/p&gt;
&lt;div class="org-src-container"&gt;


&lt;pre&gt;&lt;code class="lang-bash"&gt;find -name '*.wp' -exec grep -l "\[sourcecode.*\&amp;lt;diff\&amp;gt;.*\]" {} \; |xargs sed -i 's/\[sourcecode.*\&amp;lt;diff\&amp;gt;.*\]/&amp;lt;pre class="brush: diff;"&amp;gt;/g
find -name '*.wp' -exec grep -l "~~~~~~~~~~~~" {} \;|xargs sed -i "s%~~~~~~~~~~~~%&amp;lt;/pre&amp;gt;%g"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
Manually fixed those articles with Chinese title in url_map.csv
&lt;/p&gt;

&lt;p&gt;
Use below script to fixed the xml dumped from wordpress:
&lt;/p&gt;
&lt;div class="org-src-container"&gt;


&lt;pre&gt;&lt;code class="lang-python"&gt;#!/usr/bin/python
import getopt, sys, csv
def usage():
    print '''
NAME
    fix url mapping when migrate wordpress blog into nikola
Usage
    python fix-url-map.py [options]
'''[1:-1]

if __name__ == '__main__':
    try:
        opts, args = getopt.getopt(sys.argv[1:], "hf:x:", ["help", "file=","xml="])
    except getopt.GetoptError as err:
        # print help information and exit:
        print str(err) # will print something like "option -a not recognized"
        usage()
        sys.exit(2)

    file=""
    xml=""

    for o, a in opts:
        if o in ("-h", "--help"):
            usage()
            sys.exit()
        elif o in ("-f", "--file"):
            file= a
        elif o in ("-x", "--xml"):
            xml=a
        else:
            assert False, "unhandled option"

    with open(xml, 'r') as content_file:
        content = content_file.read()

    with open(file, 'rb') as csvfile:
         spamreader = csv.reader(csvfile, delimiter=',')
         for row in spamreader:
             content=content.replace("&amp;gt;"+row[0]+"&amp;lt;","&amp;gt;"+row[1]+"&amp;lt;")

    print content
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
Import the xml into &lt;a href="http://disqus.com"&gt;http://disqus.com&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
You can use javascript to re-direct the URL, so your old article links are still valid. Ask at &lt;a href="http://stackoverflow.com"&gt;http://stackoverflow.com&lt;/a&gt; or contact your local Javascript developers on how to do it. It's simple task but a little boring.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h3 id="sec-2"&gt;&lt;span class="section-number-2"&gt;2&lt;/span&gt; Optimization&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
I wrote a Emacs package &lt;a href="https://github.com/redguardtoo/org2nikola"&gt;org2nikola&lt;/a&gt; to convert Org subtree into nikola friendly html drafts.
&lt;/p&gt;

&lt;p&gt;
Instead hacking conf.py to tweak &lt;code&gt;js/css/html&lt;/code&gt;, I &lt;b&gt;tweak the theme's javascript/html/css directly&lt;/b&gt;. It's much simpler and more powerful.
&lt;/p&gt;

&lt;p&gt;
For example, the Zen theme use JQuery and its plugin to format post time. I use a old version of &lt;a href="https://momentjs.com/"&gt;Moment.js&lt;/a&gt; to replace them. 
&lt;/p&gt;

&lt;p&gt;
If we only use a few icons from &lt;a href="http://fontawesome.io/"&gt;Font Awesome&lt;/a&gt;. We can use NodeJS plugin &lt;a href="https://github.com/aui/font-spider"&gt;font-spider&lt;/a&gt; to trim down the font size. There are other a few front end tricks to optimize the web pages like concatenate/minify javascript and css (Frontend development knowledge is required). 
&lt;/p&gt;

&lt;p&gt;
Visit &lt;a href="http://blog.binchen.org"&gt;http://blog.binchen.org&lt;/a&gt; with browser developer tools to see the final result. You will notice my web page is 90% smaller than the the page without optimization.
&lt;/p&gt;

&lt;p&gt;
&lt;a href="https://highlightjs.org/"&gt;highlight.js&lt;/a&gt; is the best solution for code syntax highlighting for the web. I customize the &lt;code&gt;highlight.js&lt;/code&gt; to render only the programming languages I use.
&lt;/p&gt;

&lt;p&gt;
My static blog is hosted at &lt;a href="https://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>blog</category><category>en</category><category>migrate</category><category>nikola</category><category>wordpress</category><guid>http://blog.binchen.org/posts/migrate-blog-from-wordpress-into-nikola.html</guid><pubDate>Tue, 22 Apr 2014 09:09:21 GMT</pubDate></item><item><title>Hack wordpress php and make cdnjs.com host js</title><link>http://blog.binchen.org/posts/hack-wordpress-php-and-make-cdnjs-com-host-js.html</link><dc:creator>Chen Bin</dc:creator><description>&lt;div&gt;&lt;p&gt;
For jquery.js, see &lt;a href="http://rk.md/2012/cdnjs-scripts-without-plugin-wordpress/"&gt;http://rk.md/2012/cdnjs-scripts-without-plugin-wordpress/&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
I added below code into bottom of functions.php (Appearance =&amp;gt; Editor):
&lt;/p&gt;

&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-php"&gt;add_action('wp_enqueue_scripts', 'CDNJS_scripts');
function CDNJS_scripts() 
{
    wp_deregister_script('jquery');
    wp_register_script('jquery','http://cdnjs.cloudflare.com/ajax/libs/jquery/1.10.2/jquery.min.js');
    wp_enqueue_script('jquery');
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
For js from SyntaxHighlighter Evolved (Plugins =&amp;gt; Installed Plugins =&amp;gt; Edit):
&lt;/p&gt;

&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-diff"&gt;diff --git a/syntaxhighlighter.php b/syntaxhighlighter.php
index db8c668..e41ec12 100644
--- a/syntaxhighlighter.php
+++ b/syntaxhighlighter.php
@@ -117,30 +117,30 @@ class SyntaxHighlighter {
        }

        // Register brush scripts
-       wp_register_script( 'syntaxhighlighter-core',             plugins_url('syntaxhighlighter/' . $this-&amp;gt;shfolder . '/scripts/shCore.js'),            array(),                         $this-&amp;gt;agshver );
-       wp_register_script( 'syntaxhighlighter-brush-as3',        plugins_url('syntaxhighlighter/' . $this-&amp;gt;shfolder . '/scripts/shBrushAS3.js'),        array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
-       wp_register_script( 'syntaxhighlighter-brush-bash',       plugins_url('syntaxhighlighter/' . $this-&amp;gt;shfolder . '/scripts/shBrushBash.js'),       array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
-       wp_register_script( 'syntaxhighlighter-brush-coldfusion', plugins_url('syntaxhighlighter/' . $this-&amp;gt;shfolder . '/scripts/shBrushColdFusion.js'), array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
-       wp_register_script( 'syntaxhighlighter-brush-cpp',        plugins_url('syntaxhighlighter/' . $this-&amp;gt;shfolder . '/scripts/shBrushCpp.js'),        array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
-       wp_register_script( 'syntaxhighlighter-brush-csharp',     plugins_url('syntaxhighlighter/' . $this-&amp;gt;shfolder . '/scripts/shBrushCSharp.js'),     array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
-       wp_register_script( 'syntaxhighlighter-brush-css',        plugins_url('syntaxhighlighter/' . $this-&amp;gt;shfolder . '/scripts/shBrushCss.js'),        array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
-       wp_register_script( 'syntaxhighlighter-brush-delphi',     plugins_url('syntaxhighlighter/' . $this-&amp;gt;shfolder . '/scripts/shBrushDelphi.js'),     array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
-       wp_register_script( 'syntaxhighlighter-brush-diff',       plugins_url('syntaxhighlighter/' . $this-&amp;gt;shfolder . '/scripts/shBrushDiff.js'),       array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
-       wp_register_script( 'syntaxhighlighter-brush-erlang',     plugins_url('syntaxhighlighter/' . $this-&amp;gt;shfolder . '/scripts/shBrushErlang.js'),     array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
-       wp_register_script( 'syntaxhighlighter-brush-groovy',     plugins_url('syntaxhighlighter/' . $this-&amp;gt;shfolder . '/scripts/shBrushGroovy.js'),     array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
-       wp_register_script( 'syntaxhighlighter-brush-java',       plugins_url('syntaxhighlighter/' . $this-&amp;gt;shfolder . '/scripts/shBrushJava.js'),       array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
-       wp_register_script( 'syntaxhighlighter-brush-javafx',     plugins_url('syntaxhighlighter/' . $this-&amp;gt;shfolder . '/scripts/shBrushJavaFX.js'),     array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
-       wp_register_script( 'syntaxhighlighter-brush-jscript',    plugins_url('syntaxhighlighter/' . $this-&amp;gt;shfolder . '/scripts/shBrushJScript.js'),    array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
-       wp_register_script( 'syntaxhighlighter-brush-perl',       plugins_url('syntaxhighlighter/' . $this-&amp;gt;shfolder . '/scripts/shBrushPerl.js'),       array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
-       wp_register_script( 'syntaxhighlighter-brush-php',        plugins_url('syntaxhighlighter/' . $this-&amp;gt;shfolder . '/scripts/shBrushPhp.js'),        array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
-       wp_register_script( 'syntaxhighlighter-brush-plain',      plugins_url('syntaxhighlighter/' . $this-&amp;gt;shfolder . '/scripts/shBrushPlain.js'),      array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
-       wp_register_script( 'syntaxhighlighter-brush-powershell', plugins_url('syntaxhighlighter/' . $this-&amp;gt;shfolder . '/scripts/shBrushPowerShell.js'), array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
-       wp_register_script( 'syntaxhighlighter-brush-python',     plugins_url('syntaxhighlighter/' . $this-&amp;gt;shfolder . '/scripts/shBrushPython.js'),     array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
-       wp_register_script( 'syntaxhighlighter-brush-ruby',       plugins_url('syntaxhighlighter/' . $this-&amp;gt;shfolder . '/scripts/shBrushRuby.js'),       array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
-       wp_register_script( 'syntaxhighlighter-brush-scala',      plugins_url('syntaxhighlighter/' . $this-&amp;gt;shfolder . '/scripts/shBrushScala.js'),      array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
-       wp_register_script( 'syntaxhighlighter-brush-sql',        plugins_url('syntaxhighlighter/' . $this-&amp;gt;shfolder . '/scripts/shBrushSql.js'),        array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
-       wp_register_script( 'syntaxhighlighter-brush-vb',         plugins_url('syntaxhighlighter/' . $this-&amp;gt;shfolder . '/scripts/shBrushVb.js'),         array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
-       wp_register_script( 'syntaxhighlighter-brush-xml',        plugins_url('syntaxhighlighter/' . $this-&amp;gt;shfolder . '/scripts/shBrushXml.js'),        array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
+       wp_register_script( 'syntaxhighlighter-core',             '//cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shCore.js',            array(),                         $this-&amp;gt;agshver );
+       wp_register_script( 'syntaxhighlighter-brush-as3',        '//cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushAS3.js',        array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
+       wp_register_script( 'syntaxhighlighter-brush-bash',       '//cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushBash.js',       array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
+       wp_register_script( 'syntaxhighlighter-brush-coldfusion', '//cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushColdFusion.js', array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
+       wp_register_script( 'syntaxhighlighter-brush-cpp',        '//cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushCpp.js',        array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
+       wp_register_script( 'syntaxhighlighter-brush-csharp',     '//cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushCSharp.js',     array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
+       wp_register_script( 'syntaxhighlighter-brush-css',        '//cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushCss.js',        array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
+       wp_register_script( 'syntaxhighlighter-brush-delphi',     '//cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushDelphi.js',     array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
+       wp_register_script( 'syntaxhighlighter-brush-diff',       '//cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushDiff.js',       array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
+       wp_register_script( 'syntaxhighlighter-brush-erlang',     '//cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushErlang.js',     array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
+       wp_register_script( 'syntaxhighlighter-brush-groovy',     '//cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushGroovy.js',     array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
+       wp_register_script( 'syntaxhighlighter-brush-java',       '//cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushJava.js',       array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
+       wp_register_script( 'syntaxhighlighter-brush-javafx',     '//cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushJavaFX.js',     array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
+       wp_register_script( 'syntaxhighlighter-brush-jscript',    '//cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushJScript.js',    array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
+       wp_register_script( 'syntaxhighlighter-brush-perl',       '//cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushPerl.js',       array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
+       wp_register_script( 'syntaxhighlighter-brush-php',        '//cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushPhp.js',        array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
+       wp_register_script( 'syntaxhighlighter-brush-plain',      '//cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushPlain.js',      array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
+       wp_register_script( 'syntaxhighlighter-brush-powershell', '//cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushPowerShell.js', array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
+       wp_register_script( 'syntaxhighlighter-brush-python',     '//cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushPython.js',     array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
+       wp_register_script( 'syntaxhighlighter-brush-ruby',       '//cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushRuby.js',       array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
+       wp_register_script( 'syntaxhighlighter-brush-scala',      '//cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushScala.js',      array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
+       wp_register_script( 'syntaxhighlighter-brush-sql',        '//cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushSql.js',        array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
+       wp_register_script( 'syntaxhighlighter-brush-vb',         '//cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushVb.js',         array('syntaxhighlighter-core'), $this-&amp;gt;agshver );
+       wp_register_script( 'syntaxhighlighter-brush-xml',        '//cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushXml.js',        array('syntaxhighlighter-core'), $this-&amp;gt;agshver );

        // Register some popular third-party brushes
        wp_register_script( 'syntaxhighlighter-brush-clojure',    plugins_url('syntaxhighlighter/third-party-brushes/shBrushClojure.js'),          array('syntaxhighlighter-core'), '20090602'     );
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;&lt;/div&gt;</description><category>blog</category><category>en</category><category>javascript</category><category>php</category><category>wordpress</category><guid>http://blog.binchen.org/posts/hack-wordpress-php-and-make-cdnjs-com-host-js.html</guid><pubDate>Fri, 07 Mar 2014 00:58:00 GMT</pubDate></item><item><title>How to use org2blog effectively as a programmer</title><link>http://blog.binchen.org/posts/how-to-use-org2blog-effectively-as-a-programmer.html</link><dc:creator>Chen Bin</dc:creator><description>&lt;div&gt;&lt;p&gt;
&lt;a href="https://github.com/punchagan/org2blog"&gt;org2blog&lt;/a&gt; is a beautiful plugin to post to wordpress blog.
&lt;/p&gt;

&lt;p&gt;
I won't waste your time on the basic usage because it has zero learning curve and its README is very clear.
&lt;/p&gt;

&lt;p&gt;
I will talk some advanced set up here.
&lt;/p&gt;

&lt;p&gt;
As a programmer, I need wordpress syntax highlight all the code snippets I post. But it seems org2blog need some tweak to support language like elisp.
&lt;/p&gt;

&lt;p&gt;
If you grep org2blog's code, you will find a variable "org2blog/wp-sourcecode-langs". It lists all the languages org2blog supports.
&lt;/p&gt;

&lt;p&gt;
So all you need to do is insert below code into ~/.emacs:
&lt;/p&gt;

&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-lisp"&gt;(setq org2blog/wp-sourcecode-langs
      '("actionscript3" "bash" "coldfusion" "cpp" "csharp" "css" "delphi"
        "erlang" "fsharp" "diff" "groovy" "javascript" "java" "javafx" "matlab"
        "objc" "perl" "php" "text" "powershell" "python" "ruby" "scala" "sql"
        "vb" "xml"
        "sh" "elisp" "lisp" "lua"))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
Then you need install the wordpress plugin &lt;a href="http://www.viper007bond.com/wordpress-plugins/syntaxhighlighter/"&gt;SyntaxHighlighter Evolved&lt;/a&gt; to do the syntax highlight thing. Well, you will find the languages like elisp is not supported by this plugin.
&lt;/p&gt;

&lt;p&gt;
That's easy to fix. Please log into your blog, modify that plugin online:
&lt;/p&gt;

&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-diff"&gt;diff --git a/syntaxhighlighter.php b/syntaxhighlighter.php
index 53b4815..808b14b 100644
--- a/syntaxhighlighter.php
+++ b/syntaxhighlighter.php
@@ -222,6 +222,11 @@ class SyntaxHighlighter {
            'xslt'          =&amp;gt; 'xml',
            'html'          =&amp;gt; 'xml',
            'xhtml'         =&amp;gt; 'xml',
+           'text'          =&amp;gt; 'clojure',
+           'elisp'         =&amp;gt; 'clojure',
+           'lisp'          =&amp;gt; 'clojure',
+           'sh'            =&amp;gt; 'bash',
+           'lua'           =&amp;gt; 'ruby',
        ) );
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
As you can see, I use clojure syntax to highlight elisp and use ruby syntax to highlight lua.
&lt;/p&gt;

&lt;p&gt;
You may ask why I use clojure syntax to highlight simple text in above set up?
&lt;/p&gt;

&lt;p&gt;
Well, I already submit lots of my elisp code before set up my org2blog correctly. Those code snippets are regarded as simple text. I won't waste my time to mark those old snippets one by one. That's why I render text as clojure code.
&lt;/p&gt;

&lt;p&gt;
Besides, I find the wordpress theme produced by &lt;a href="http://automattic.com"&gt;Automattic&lt;/a&gt; (Yes, the company behind wordpress) is good for programmers because they obviously have optimized font size for different screen resolutions. That's important for code reading. I use Trvl v1.0.2.
&lt;/p&gt;&lt;/div&gt;</description><category>emacs</category><category>en</category><category>org</category><category>wordpress</category><guid>http://blog.binchen.org/posts/how-to-use-org2blog-effectively-as-a-programmer.html</guid><pubDate>Thu, 06 Mar 2014 14:25:00 GMT</pubDate></item><item><title>Use org2blog to share blog efficiently</title><link>http://blog.binchen.org/posts/use-org2blog-to-share-blog-efficiently.html</link><dc:creator>Chen Bin</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://github.com/punchagan/org2blog"&gt;org2blog&lt;/a&gt; will post items in org-mode into wordpress blog. &lt;/p&gt; &lt;p&gt; It makes the Emacs best blog writer in the world. &lt;/p&gt; &lt;p&gt; My only issue is after publishing the blog, how can I share the blog url to social network sites. &lt;/p&gt; &lt;p&gt; So I write a function which will automatically put the article's permanent url into clipboard: &lt;/p&gt;   
&lt;pre class="prettyprint "&gt;

(defun my-org2blog-post-subtree ()
  (interactive)
  ;; go to the top node which is a blog item
  ;;(outline-up-heading)

  ;; post and publish
  (org2blog/wp-post-subtree t)
  (let* ((postid (or (org-entry-get (point) "POSTID")
                     (org-entry-get (point) "POST_ID")))
         (url org2blog/wp-server-xmlrpc-url))
    (if (not postid)
        (message "This subtree hasn't been posted, yet.")
      (setq url (substring url 0 -10))
      (setq url (concat url "?p=" postid ))
      (kill-new url)
      (with-temp-buffer
        (insert url)
        (shell-command-on-region (point-min) (point-max)
                                 (cond
                                  ((eq system-type 'cygwin) "putclip")
                                  ((eq system-type 'darwin) "pbcopy")
                                  (t "xsel -ib")
                                  )))
      (message (concat url " =&amp;gt; clipboard"))
      )))
&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;&lt;p&gt; BTW, use some clipboard manager to synchronize the X clipboards. &lt;/p&gt;&lt;/div&gt;</description><category>blog</category><category>emacs</category><category>en</category><category>org2blog</category><category>wordpress</category><guid>http://blog.binchen.org/posts/use-org2blog-to-share-blog-efficiently.html</guid><pubDate>Fri, 30 Aug 2013 11:39:00 GMT</pubDate></item><item><title>Best wordpress theme for geeks</title><link>http://blog.binchen.org/posts/the-most-elegant-wordpress-theme-for-geeks.html</link><dc:creator>Chen Bin</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;I love the Wordpress theme &lt;a href="http://sixhours-demo.calobeedoodles.com/"&gt;Sixhours&lt;/a&gt; 1.5 designed the by &lt;a href="http://www.carolinemoore.net"&gt;Caroline Moore&lt;/a&gt;. &lt;/p&gt; &lt;p&gt; It is purely simple text theme with dark background and elegant fonts. &lt;/p&gt; &lt;p&gt; But for geeks there are two shortcomings: &lt;/p&gt;&lt;ol&gt; &lt;li&gt;The font color of the hyperlinks is almost same to the plain text. &lt;/li&gt; &lt;li&gt;The code block in &amp;lt;pre&amp;gt; element is not highlighted with solid border. &lt;/li&gt; &lt;/ol&gt;   &lt;p&gt; So here is my patch of style.css to fix these problems: &lt;/p&gt;   &lt;pre class="src src-diff"&gt;&lt;span style="color: #70c0b1;"&gt;--- &lt;/span&gt;&lt;span style="color: #7aa6da; font-weight: bold;"&gt;style.css   2012-03-08 23:56:31.000000000 +0800&lt;/span&gt;
&lt;span style="color: #70c0b1;"&gt;+++ &lt;/span&gt;&lt;span style="color: #7aa6da; font-weight: bold;"&gt;style.css   2012-03-08 23:55:53.000000000 +0800&lt;/span&gt;
&lt;p&gt;&lt;span style="color: #c397d8;"&gt;@@ -25,7 +25,7 @@&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #969896;"&gt; a:visited {&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #969896;"&gt;        text-decoration: none;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #969896;"&gt;        font-weight: bold;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #e78c45;"&gt;-&lt;/span&gt;&lt;span style="color: #e78c45;"&gt;       color: #f3f3f3;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #b9ca4a;"&gt;+&lt;/span&gt;&lt;span style="color: #b9ca4a;"&gt;       color: #888;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #969896;"&gt; }&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #969896;"&gt; a:hover,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #969896;"&gt; a:active {&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #c397d8;"&gt;@@ -440,4 +440,17 @@&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #969896;"&gt;        font-style: italic;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #969896;"&gt; }&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #b9ca4a;"&gt;+&lt;/span&gt;&lt;span style="color: #b9ca4a;"&gt;/&lt;em&gt; source code block&lt;/em&gt;/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #b9ca4a;"&gt;+&lt;/span&gt;&lt;span style="color: #b9ca4a;"&gt;pre.src {&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #b9ca4a;"&gt;+&lt;/span&gt;&lt;span style="color: #b9ca4a;"&gt;    border:solid 1px;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #b9ca4a;"&gt;+&lt;/span&gt;&lt;span style="color: #b9ca4a;"&gt;    -moz-box-shadow: 5px 5px 5px #000; /&lt;em&gt; Firefox &lt;/em&gt;/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #b9ca4a;"&gt;+&lt;/span&gt;&lt;span style="color: #b9ca4a;"&gt;    -webkit-box-shadow: 5px 5px 5px #000; /&lt;em&gt; Safari, Chrome &lt;/em&gt;/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #b9ca4a;"&gt;+&lt;/span&gt;&lt;span style="color: #b9ca4a;"&gt;    box-shadow: 5px 5px 5px #000; /&lt;em&gt; CSS3 &lt;/em&gt;/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #b9ca4a;"&gt;+&lt;/span&gt;&lt;span style="color: #b9ca4a;"&gt;    clear: none;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #b9ca4a;"&gt;+&lt;/span&gt;&lt;span style="color: #b9ca4a;"&gt;    float: none;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #b9ca4a;"&gt;+&lt;/span&gt;&lt;span style="color: #b9ca4a;"&gt;    font-family: "Courier New",monospace,Monaco,Lucida Console !important;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #b9ca4a;"&gt;+&lt;/span&gt;&lt;span style="color: #b9ca4a;"&gt;    margin:5px;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #b9ca4a;"&gt;+&lt;/span&gt;&lt;span style="color: #b9ca4a;"&gt;    overflow:auto;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #b9ca4a;"&gt;+&lt;/span&gt;&lt;span style="color: #b9ca4a;"&gt;    white-space: pre;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #b9ca4a;"&gt;+&lt;/span&gt;&lt;span style="color: #b9ca4a;"&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #969896;"&gt; /&lt;em&gt; End Comments &lt;/em&gt;/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;/pre&gt;  &lt;/div&gt;</description><category>en</category><category>geek</category><category>theme</category><category>wordpress</category><guid>http://blog.binchen.org/posts/the-most-elegant-wordpress-theme-for-geeks.html</guid><pubDate>Fri, 09 Mar 2012 00:16:00 GMT</pubDate></item></channel></rss>