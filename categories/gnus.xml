<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Chen's blog (gnus)</title><link>http://blog.binchen.org/</link><description></description><atom:link href="http://blog.binchen.org/categories/gnus.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Wed, 03 Feb 2016 11:36:09 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Grab email address in Gnus</title><link>http://blog.binchen.org/posts/grab-email-address-in-gnus.html</link><dc:creator>Chen Bin</dc:creator><description>&lt;div&gt;&lt;p&gt;That's easy in Gnus.
&lt;/p&gt;

&lt;p&gt;
I just re-use the mail sent from PM because she is good at the things.
&lt;/p&gt;

&lt;div id="outline-container-1" class="outline-3"&gt;
&lt;h4 id="sec-1"&gt;Usage&lt;/h4&gt;
&lt;div class="outline-text-3" id="text-1"&gt;

&lt;ul&gt;&lt;li&gt;Go to the Summary Buffer (press Enter on a mail folder). 
&lt;/li&gt;
&lt;li&gt;Press &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/gnus/Limiting.html"&gt;`/ a PM-name Enter`&lt;/a&gt; 
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;M-x gnus-summary-extract-mail-address&lt;/code&gt;, extracted mail addresses is inserted to kill ring
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-2" class="outline-3"&gt;
&lt;h4 id="sec-2"&gt;Code&lt;/h4&gt;
&lt;div class="outline-text-3" id="text-2"&gt;

&lt;p&gt;Insert below code into ~/.emacs,
&lt;/p&gt;



&lt;pre&gt;&lt;code class="lang-lisp"&gt;(defun gnus-summary-extract-mail-address(regexp)
  "Extract TO/CC/FROM fields from mails in current Gnus Summary Buffer.
REGEXP is pattern to exclude extracted address.  For example, 'Tom|gmail' excludes Tom or gmail.
Final result is inserted into kill-ring and returned."
  (interactive
   (let* ((regexp (read-regexp "Regex to exclude mail address (OPTIONAL):")))
     (list regexp)))

  (unless (featurep 'cl)
    (require 'cl))

  (let ((rlt "") (i 0))
    (dolist (d gnus-newsgroup-data)
      (let ((header (gnus-data-header d)) cc-to)
        (setq i (+ 1 i))
        (if (= (mod i 100) 0) (message "%s mails scanned ..." i))
        (when (vectorp header)
          (if (setq cc-to (mail-header-extra header))
              ;; (message "cc-to=%s cc=%s" cc-to (assoc 'Cc cc-to))
              (setq rlt (concat rlt
                                (cdr (assoc 'To cc-to))
                                ", "
                                (cdr (assoc 'Cc cc-to))
                                ", ")))
          (setq rlt (concat rlt (if (string= "" rlt) "" ", ") (mail-header-from header) ", "))
          )))
    ;; trim trailing ", "
    (setq rlt (split-string (replace-regexp-in-string (rx (* (any ", ")) eos)
                                                      ""
                                                      rlt) ", *"))

    ;; remove empty strings
    (setq rlt (delq nil (remove-if (lambda (s) (or (not s) (string= "" s)))
                               rlt)))
    ;; remove actually duplicated mails
    (setq rlt (delq nil (remove-duplicates rlt
                                 :test (lambda (x y)
                                         (let (x1 y1)
                                           ;; Tom W &amp;lt;tom.w@gmail.com&amp;gt; | tom.w@gmail.com (Tom W)
                                           (if (string-match "^[^&amp;lt;]*&amp;lt;\\([^ ]*\\)&amp;gt; *$" x)
                                               (setq x1 (match-string 1 x))
                                             (setq x1 (replace-regexp-in-string " *([^()]*) *" "" (if x x ""))))
                                           (if (string-match "^[^&amp;lt;]*&amp;lt;\\([^ ]*\\)&amp;gt; *$" y)
                                               (setq y1 (match-string 1 y))
                                             (setq y1 (replace-regexp-in-string " *([^ ]*) *" "" (if y y ""))))
                                           (string= x1 y1)))
                                 :from-end t)))
    ;; exclude mails
    (if (and regexp (not (string= regexp "")))
        (setq rlt (delq nil (remove-if (lambda (s)
                                         (string-match (concat "\\(" (replace-regexp-in-string "|" "\\\\|" regexp) "\\)") s))
                                       rlt))))
    (kill-new (mapconcat 'identity rlt ", "))
    (message "Mail addresses =&amp;gt; kill-ring")
    rlt))
&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;
I tested on my office mail inbox. 8K+ mails is scanned in less than one minute.
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-3" class="outline-3"&gt;
&lt;h4 id="sec-3"&gt;Technical details&lt;/h4&gt;
&lt;div class="outline-text-3" id="text-3"&gt;

&lt;p&gt;Global variable &lt;code&gt;gnus-newsgroup-data&lt;/code&gt; contains the information of displayed mails in current folder. It's updated dynamically. 
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;gnus-summary-extract-mail-address&lt;/code&gt; could also be used as an API. It return the list of mail addresses.
&lt;/p&gt;
&lt;p&gt;
If you want to use it to update the &lt;a href="https://www.emacswiki.org/emacs/CategoryBbdb"&gt;BBDB&lt;/a&gt; database, study code from my project &lt;a href="https://github.com/redguardtoo/gmail2bbdb"&gt;gmail2bbdb&lt;/a&gt; which use plain Lisp to insert Name and Mail Address into "~/.bbdb".
&lt;/p&gt;&lt;/div&gt;

&lt;/div&gt;&lt;/div&gt;</description><category>emacs</category><category>email</category><category>en</category><category>gnus</category><guid>http://blog.binchen.org/posts/grab-email-address-in-gnus.html</guid><pubDate>Wed, 03 Feb 2016 11:35:57 GMT</pubDate></item><item><title>How to use Gnus Group Topics efficiently</title><link>http://blog.binchen.org/posts/how-to-use-gnus-group-topics-efficiently.html</link><dc:creator>Chen Bin</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;a href="http://blog.binchen.org/posts/how-to-use-gnus-group-topics-efficiently.html#Group-Topics"&gt;Group Topics&lt;/a&gt; is used to manage Gnus groups.
&lt;/p&gt;

&lt;p&gt;
For example, you can,
&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;Place groups (mail folders)  from Gmail into "gmail" topic
&lt;/li&gt;
&lt;li&gt;Place groups (mails folders) from Outlook.com into "hotmail" topic
&lt;/li&gt;
&lt;li&gt;Make "gmail" and "hotmail" belong to the root topic "Gnus"
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;
Enable it is just one line,
&lt;/p&gt;

&lt;pre&gt;&lt;code class="lang-lisp"&gt;(add-hook 'gnus-group-mode-hook 'gnus-topic-mode)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
Now comes the question how to delete/add/move the topics?
&lt;/p&gt;

&lt;p&gt;
The official answer is to read &lt;a href="http://www.gnu.org/software/emacs/manual/html_node/gnus/Topic-Commands.html#Topic-Commands"&gt;its manual&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
But there is a &lt;b&gt;simpler solution&lt;/b&gt;. All you need to do is insert below code into ~/.emacs or ~/.gnus.el,
&lt;/p&gt;

&lt;pre&gt;&lt;code class="lang-lisp"&gt;(eval-after-load 'gnus-topic
  '(progn
     (setq gnus-topic-topology '(("Gnus" visible)
                                 (("hotmail" visible nil nil))
                                 (("gmail" visible nil nil))))

     (setq gnus-topic-alist '(("hotmail" ; the key of topic
                               "nnimap+hotmail:Inbox"
                               "nnimap+hotmail:Drafts"
                               "nnimap+hotmail:Sent"
                               "nnimap+hotmail:Junk"
                               "nnimap+hotmail:Deleted")
                              ("gmail" ; the key of topic
                               "INBOX"
                               "[Gmail]/Sent Mail"
                               "[Gmail]/Trash"
                               "Drafts")
                              ("Gnus")))))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
The &lt;b&gt;management of topics is as easy as editing above code&lt;/b&gt;.
&lt;/p&gt;

&lt;p&gt;
My setup always works no matter ~/.newsrc.eld is loaded or not.
&lt;/p&gt;

&lt;p&gt;
BTW, "hotmail" and "gmail" are the keys you used when configuring IMAP accounts,
&lt;/p&gt;

&lt;pre&gt;&lt;code class="lang-lisp"&gt;(setq gnus-select-method
             '(nnimap "gmail" ; key
                      (nnimap-address "imap.gmail.com")
                      (nnimap-server-port 993)
                      (nnimap-stream ssl)))
(add-to-list 'gnus-secondary-select-methods
             '(nnimap "hotmail" ; key
                      (nnimap-address "imap-mail.outlook.com")
                      (nnimap-server-port 993)
                      (nnimap-stream ssl)))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><category>emacs</category><category>email</category><category>en</category><category>gmail</category><category>gnus</category><guid>http://blog.binchen.org/posts/how-to-use-gnus-group-topics-efficiently.html</guid><pubDate>Sun, 10 Jan 2016 05:36:49 GMT</pubDate></item><item><title>Why Gnus is better than Gmail</title><link>http://blog.binchen.org/posts/why-gnus-is-better-than-gmail.html</link><dc:creator>Chen Bin</dc:creator><description>&lt;div&gt;&lt;p&gt;Here is my use case. My agent notify me that there is a potential contract from a company named "FF".
&lt;/p&gt;

&lt;p&gt;
My first reaction is to reply the email with "Great! Please forward my CV".
&lt;/p&gt;

&lt;p&gt;
Before I press the "Send" button, it occurs to me that other agents have possibily &lt;b&gt;already&lt;/b&gt; submitted my CV to FF since it is a big organization. I need double check.
&lt;/p&gt;

&lt;p&gt;
I save current email as draft, search all the mails containing "FF" and forward them to the original email I've not sent yet. Then my agent could figure out whether other guys have already represented me for the same opportunity.
&lt;/p&gt;

&lt;p&gt;
This operation is doable in desktop application like Outlook. I need search emails in a new dialog box. Select emails. Then drag them to the original email.
&lt;/p&gt;

&lt;p&gt;
It's hard to do this kind of thing in Gmail.
&lt;/p&gt;

&lt;p&gt;
Now let me show you how Emacs get the job done:
&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;Step 1, Switch to Groups buffer (the buffer which lists email folder). press key "G G" or run command "M-x gnus-group-make-nnir-group", input the keyword "FF" to start search
&lt;/li&gt;
&lt;li&gt;Step 2, Mark the emails I want to forward with hot key "#"
&lt;/li&gt;
&lt;li&gt;Step 3, Press key "C-c C-f" or run command "M-x gnus-summary-mail-forward". A new buffer is created. It contains a big chuck of xml string wrapped by either "&amp;lt;#multipart&amp;gt;" tag or "&amp;lt;#mml&amp;gt;" tag.
&lt;/li&gt;
&lt;li&gt;Step 4, Select and copy that string into you original email. Done!
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;
Well, some people may argue that step 4 could be improved a little bit.
&lt;/p&gt;

&lt;p&gt;
In Emacs, everyting could be optimized. Please copy below code into your ~/.emacs:
&lt;/p&gt;

&lt;pre&gt;&lt;code class="lang-lisp"&gt;(defun message-select-forwarded-email-tags ()
  "select the &amp;lt;#mml-or-what-ever&amp;gt; tags in message-mode"
  (interactive)
  (let (start rlt)
    (when (search-forward "&amp;lt;#")
      (setq start (point))
      (push-mark (point) t t)
      (goto-char (point-max))
      (search-backward "&amp;gt;")
      (forward-char)
      (setq rlt t))
    rlt))

(defun message-copy-select-forwarded-email-tags ()
  "copy the &amp;lt;#mml-or-what-ever&amp;gt; tags in message-mode"
  (interactive)
  (save-excursion
    (cond
     ((message-select-forwarded-email-tags)
      (copy-region-as-kill (region-beginning) (region-end))
      (message "forwarded email tags copied!"))
     (t (message "NO forwarded email tags found!"))
     )
    ))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
All you need is "M-x message-copy-select-forwarded-email-tags" to copy the tags into kill-ring.
&lt;/p&gt;

&lt;p&gt;
UPDATE:
This is only a case study. My complete guide on Gnus is at &lt;a href="http://blog.binchen.org/posts/notes-on-using-gnus.html"&gt;http://blog.binchen.org/posts/notes-on-using-gnus.html&lt;/a&gt;.
&lt;/p&gt;&lt;/div&gt;</description><category>emacs</category><category>email</category><category>en</category><category>gnus</category><guid>http://blog.binchen.org/posts/why-gnus-is-better-than-gmail.html</guid><pubDate>Wed, 30 Apr 2014 12:46:31 GMT</pubDate></item><item><title>Use Gnus to apply patch sent by `git send-email`</title><link>http://blog.binchen.org/posts/use-gnus-to-apply-patch-sent-by-git-send-email.html</link><dc:creator>Chen Bin</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;div id="outline-container-1" class="outline-3"&gt; &lt;h4 id="sec-1"&gt;Send the latest commit&lt;/h4&gt; &lt;div class="outline-text-3" id="text-1"&gt;     
&lt;pre class="prettyprint "&gt;

# send one commit

git send-email -1 --annotate
&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;&lt;/div&gt;  &lt;/div&gt;  &lt;div id="outline-container-2" class="outline-3"&gt; &lt;h4 id="sec-2"&gt;Apply patch&lt;/h4&gt; &lt;div class="outline-text-3" id="text-2"&gt;   &lt;p&gt; Select that email, run command "M-x gnus-summary-save-article-email" whose short key is "O m" in summary buffer. &lt;/p&gt; &lt;p&gt; Emacs will prompt you where to save that email. Say I save it in ~/News/patch/hello.patch. &lt;/p&gt;   
&lt;pre class="prettyprint "&gt;

git am ~/News/patch/hello.patch
&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;&lt;/div&gt;  &lt;/div&gt;  &lt;div id="outline-container-3" class="outline-3"&gt; &lt;h4 id="sec-3"&gt;Syntax highlight of patch email&lt;/h4&gt; &lt;div class="outline-text-3" id="text-3"&gt;  &lt;p&gt;See &lt;a href="https://github.com/fgeller/emacs.d/blob/master/site-lisp/gnus-article-treat-patch.el"&gt;fgeller's plugin&lt;/a&gt;. &lt;/p&gt; &lt;p&gt; Add following code to configure his plugin: &lt;/p&gt;   
&lt;pre class="prettyprint "&gt;

(require 'gnus-article-treat-patch)

(setq gnus-article-patch-conditions
      '( "^@@ -[0-9]+,[0-9]+ \\+[0-9]+,[0-9]+ @@" ))
&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</description><category>emacs</category><category>email</category><category>en</category><category>git</category><category>gnus</category><category>patch</category><guid>http://blog.binchen.org/posts/use-gnus-to-apply-patch-sent-by-git-send-email.html</guid><pubDate>Fri, 06 Sep 2013 22:00:00 GMT</pubDate></item><item><title>How to get email from exchange server without Outlook</title><link>http://blog.binchen.org/posts/how-to-get-email-from-exchange-server-without-outlook.html</link><dc:creator>Chen Bin</dc:creator><description>&lt;div&gt;&lt;p&gt;This article has three parts. 
&lt;/p&gt;

&lt;p&gt;
First part explains how to set up gateway &lt;a href="http://davmail.sourceforge.net/"&gt;davmail&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
Second part uses thunderbird to fetch mails from exchange server.
&lt;/p&gt;

&lt;p&gt;
Third part uses Emacs and Gnus to get mails. Non-technical guy can skip this part.
&lt;/p&gt;

&lt;div id="table-of-contents"&gt;
&lt;h3&gt;Table of Contents&lt;/h3&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href="http://blog.binchen.org/posts/how-to-get-email-from-exchange-server-without-outlook.html#sec-1"&gt;1 davmail as email gateway&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href="http://blog.binchen.org/posts/how-to-get-email-from-exchange-server-without-outlook.html#sec-1-1"&gt;1.1 Install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.binchen.org/posts/how-to-get-email-from-exchange-server-without-outlook.html#sec-1-2"&gt;1.2 Configuration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.binchen.org/posts/how-to-get-email-from-exchange-server-without-outlook.html#sec-2"&gt;2 Thunderbird&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.binchen.org/posts/how-to-get-email-from-exchange-server-without-outlook.html#sec-3"&gt;3 Emacs Gnus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-1" class="outline-3"&gt;
&lt;h4 id="sec-1"&gt;davmail as email gateway&lt;/h4&gt;
&lt;div class="outline-text-3" id="text-1"&gt;

&lt;p&gt;What's davmail, quoted from its site:
&lt;/p&gt;


&lt;pre class="example"&gt;Ever wanted to get rid of Outlook ? DavMail is a POP/IMAP/SMTP/Caldav/Carddav/LDAP exchange gateway allowing users to use any mail/calendar client (e.g. Thunderbird with Lightning or Apple iCal) with an Exchange server.
&lt;/pre&gt;



&lt;/div&gt;

&lt;div id="outline-container-1-1" class="outline-4"&gt;
&lt;h5 id="sec-1-1"&gt;Install&lt;/h5&gt;
&lt;div class="outline-text-4" id="text-1-1"&gt;

&lt;p&gt;&lt;a href="http://davmail.sourceforge.net/download.html"&gt;Download the installer&lt;/a&gt;, on Debian/Ubuntu/Mint:
&lt;/p&gt;



&lt;pre&gt;&lt;code class="lang-sh"&gt;sudo apt-get install libswt-gtk-3-jni libswt-gtk-3-java libswt-cairo-gtk-3-jni
# ubuntu/debian only; for other distribution, just download src package
sudo dpkg -i davmail_4.5.1-2303-1_all.deb
&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;
Installation is easy. davmail by itself is a portable java application. Since it has some GUI front end, it's dependent on SWT. So I give the instruction on how to install SWT in ubuntu. If you don't use ubuntu, then you may be already geek enough to know how to install SWT.
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-1-2" class="outline-4"&gt;
&lt;h5 id="sec-1-2"&gt;Configuration&lt;/h5&gt;
&lt;div class="outline-text-4" id="text-1-2"&gt;

&lt;p&gt;Now start davmail. 
&lt;/p&gt;
&lt;p&gt;
Please input the web Outlook url like "&lt;a href="https://webmail.mycompany.com.au/owa/"&gt;https://webmail.mycompany.com.au/owa/&lt;/a&gt;" in its GUI.
&lt;/p&gt;
&lt;p&gt;
By default all the services are &lt;b&gt;NOT&lt;/b&gt; encrypted. It makes sense because email client and gateway are at the same computer.
&lt;/p&gt;
&lt;p&gt;
Write down the port numbers. In my case, I need port number of IMAP/POP3/SMTP.
&lt;/p&gt;
&lt;p&gt;
That's all you need to do &lt;b&gt;unless davmail cannot detect your Exchange server automatically&lt;/b&gt;!
&lt;/p&gt;
&lt;p&gt;
If Exchange server uses un-conventional EWS URL which cannot be detected by davmail, you need &lt;b&gt;find the URL manually&lt;/b&gt; with &lt;a href="http://ewseditor.codeplex.com/"&gt;EWSEditor&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
For example, my EWS URL is "&lt;a href="https://my-company.local/EWS/Exchange.asmx"&gt;https://my-company.local/EWS/Exchange.asmx&lt;/a&gt;". In davmail, input that URL in "Main -&amp;gt; OWA (Exchange) URL" and force the "Exchange Protocol" into "EWS".
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-2" class="outline-3"&gt;
&lt;h4 id="sec-2"&gt;Thunderbird&lt;/h4&gt;
&lt;div class="outline-text-3" id="text-2"&gt;

&lt;p&gt;Create a new account, and &lt;b&gt;manually&lt;/b&gt; configure the server. The server name is "127.0.0.1", the port number is already on your paper. The minimum setup needs IMAP port to  receive mail and SMTP port to send email.
&lt;/p&gt;
&lt;p&gt;
You don't need care about ssl stuff, let thunderbird handle it. But if you get the error message like "BAD command authentication required" in davmail's log, modify setup in "Account Settings -&amp;gt; Server Settings -&amp;gt; Security Settings -&amp;gt; Connection Settings". Select "None".
&lt;/p&gt;
&lt;p&gt;
The only issue is the "Username". You can log in Outlook Web UI, click "Options -&amp;gt; Change Password". The user name is displayed above the first input box. Please note the full user name may include the work domain.
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-3" class="outline-3"&gt;
&lt;h4 id="sec-3"&gt;Emacs Gnus&lt;/h4&gt;
&lt;div class="outline-text-3" id="text-3"&gt;

&lt;p&gt;Gnus cannot access IMAP service of davmail. There is &lt;a href="http://permalink.gmane.org/gmane.emacs.gnus.general/83301"&gt;some bug&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
So we have to turn to POP3. Check &lt;a href="http://www.emacswiki.org/emacs/GnusTutorial"&gt;documentation&lt;/a&gt; at EmacsWiki.
&lt;/p&gt;
&lt;p&gt;
The key point is DO NOT delete emails on server. You must &lt;b&gt;set the variable "pop3-leave-mail-on-server" to true&lt;/b&gt;!
&lt;/p&gt;
&lt;p&gt;
Insert below code into your ~/.emacs:
&lt;/p&gt;



&lt;pre&gt;&lt;code class="lang-lisp"&gt;;; gnus+davmail bug, so I have to use pop3 for davmail
;; http://permalink.gmane.org/gmane.emacs.gnus.general/83301
;; but delete all the mails on server is scary
(setq pop3-leave-mail-on-server t)

(add-to-list 'gnus-secondary-select-methods '(nnml "mycompany"))
(setq mail-sources
      '((pop :server "127.0.0.1" ;; davmail is set up on localhost
         :port 1110
         :user "username"
         :password "password"
         :stream network))) ;; by default, davmail don't encrypt mail
&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;
Since I've got many mails in INBOX folder, POP3 could take some time to get them.
&lt;/p&gt;
&lt;p&gt;
Now the bad news:
Our IT administrator blocks davmail access because it relay too many requests from Gnus in short time! My solution is to use another IMAP client thunderbird to clean up the INBOX folder before start Gnus.
&lt;/p&gt;
&lt;p&gt;
Another tip is whenever open a folder in Gnus, press "C-u ENTER" instead of "ENTER" key. "C-u" here means display all the read &lt;b&gt;and unread mails&lt;/b&gt;. It's awkward when product manager ask you open an important mail but that mail is invisible because it's marked READ. Check my article &lt;a href="https://github.com/redguardtoo/mastering-emacs-in-one-year-guide/blob/master/gnus-guide-en.org"&gt;Practical guide to use Gnus with Gmail&lt;/a&gt; for more tips.
&lt;/p&gt;&lt;/div&gt;

&lt;/div&gt;&lt;/div&gt;</description><category>emacs</category><category>email</category><category>en</category><category>gnus</category><category>imap</category><category>linux</category><category>outlook</category><guid>http://blog.binchen.org/posts/how-to-get-email-from-exchange-server-without-outlook.html</guid><pubDate>Tue, 06 Aug 2013 20:26:00 GMT</pubDate></item><item><title>Practical guide to use Gnus with Gmail</title><link>http://blog.binchen.org/posts/notes-on-using-gnus.html</link><dc:creator>Chen Bin</dc:creator><description>&lt;p&gt;This article is moved to &lt;a href="https://github.com/redguardtoo/mastering-emacs-in-one-year-guide/blob/master/gnus-guide-en.org"&gt;Github&lt;/a&gt;
&lt;/p&gt;</description><category>emacs</category><category>email</category><category>gmail</category><category>gnus</category><guid>http://blog.binchen.org/posts/notes-on-using-gnus.html</guid><pubDate>Fri, 12 Oct 2012 17:14:00 GMT</pubDate></item></channel></rss>