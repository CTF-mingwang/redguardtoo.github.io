<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Chen's blog (js2)</title><link>http://blog.binchen.org/</link><description></description><atom:link href="http://blog.binchen.org/categories/js2.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Fri, 30 Oct 2015 00:34:06 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Use js2-mode to print json path</title><link>http://blog.binchen.org/posts/use-js2-mode-to-print-json-path.html</link><dc:creator>Chen Bin</dc:creator><description>&lt;div&gt;&lt;p&gt;These days most web applications are based on RESTful service.
&lt;/p&gt;

&lt;p&gt;
So javascript developers have to deal with JSON frequently.
&lt;/p&gt;

&lt;p&gt;
When working on JSON, the most boring and error prone task is get the full path of specific field.
&lt;/p&gt;

&lt;p&gt;
For example, given the JSON response like:
&lt;/p&gt;

&lt;pre&gt;&lt;code class="lang-javascript"&gt;{
  key1: {
    subkey1: {
      arr1: [{ key3: 'hello'}]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
The developer need figure out the full path of "key3" which is "&lt;code&gt;key1.subkey1.arr1[0].key3&lt;/code&gt;".
&lt;/p&gt;

&lt;p&gt;
My solution is to take advantage of AST created by &lt;a href="https://github.com/mooz/js2-mode"&gt;js2-mode&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
Step 1, Insert below code into ~/.emacs,
&lt;/p&gt;

&lt;pre&gt;&lt;code class="lang-lisp"&gt;(defun js2-print-json-path ()
  "Print the path to the JSON value under point, and save it in the kill ring."
  (interactive)
  (let (next-node node-type rlt key-name)
    (setq next-node (js2-node-at-point))
    ;; scanning from AST, no way to optimise `js2-node-at-point'
    (while (and next-node (arrayp next-node) (&amp;gt; (length next-node) 5))
      (setq node-type (aref next-node 0))
      (cond
       ;; json property node
       ((eq node-type 'cl-struct-js2-object-prop-node)
        (setq key-name (js2-prop-node-name (js2-object-prop-node-left next-node)))
        (if rlt (setq rlt (concat "." key-name rlt))
          (setq rlt (concat "." key-name))))

       ;; array node
       ((or (eq node-type 'cl-struct-js2-array-node)
            (eq node-type 'cl-struct-js2-infix-node))
        (if rlt (setq rlt (concat "[0]" rlt))
          (setq rlt "[0]")))

       (t)) ; do nothing

      ;; get parent node
      (setq next-node (aref next-node 5)))
    ;; clean final result
    (setq rlt (replace-regexp-in-string "^\\." "" rlt))
    (when rlt
      (kill-new rlt)
      (message "%s =&amp;gt; kill-ring" rlt))
    rlt))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
 Step 2, move the cursor over the key/value of the field and `M-x js2-print-json-path`.
&lt;/p&gt;&lt;/div&gt;</description><category>emacs</category><category>en</category><category>javascript</category><category>js2</category><category>mode</category><guid>http://blog.binchen.org/posts/use-js2-mode-to-print-json-path.html</guid><pubDate>Thu, 29 Oct 2015 14:18:10 GMT</pubDate></item></channel></rss>