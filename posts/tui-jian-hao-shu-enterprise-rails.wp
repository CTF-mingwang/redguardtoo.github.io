<html><body><p>Dan Chak写的<a href="http://shop.oreilly.com/product/9780596515201.do">Enterprise Rails</a>很不错.作者在Amazon工作过. </p> <p> 他的观点独特,但是论据充分推理严密. </p> <p> 简介可参考<a href="http://www.amazon.com/Enterprise-Rails-Dan-Chak/dp/0596515200">亚马逊的这篇书评</a>. 简略地翻译成中文的意思就是Dan Chak推荐的方法是Anti-Rails的. </p> <p> 例如他对MySQL不感冒,"如果要用数据库,就用PostgreSQL,用PostgreSQL的DDL,不用Ruby写的Migration Script,结束" </p> <p> 我对于他的某些观点还没有完全接受,但是相当值得重视. </p> <p> 例如,他强烈建议将decoractor code转移到plugin module中,充分利用ruby的管理机制.他完全反对使用git的submodule机制来代替. </p> <p> 这点我现在身有体会,<a href="http://book.git-scm.com/5_submodules.html">git-submodule</a> 给我带来的麻烦参考<a href="https://github.com/purcell/emacs.d/issues/8">这里</a>(git submodule告诉我子模块版本A可用，但是该版本不是正式的发布版本，因为没有这样的强制机制，事实是A不存在或者被某人误删了，于是我惨了） 解决办法可以类比于ruby(现在语言是elisp),使用emacs自带的包管理机制elpa<a href="https://github.com/purcell/emacs.d/commit/11d791caab798015d4ea1909f26259c035bd61">而不是git-submodule</a>. </p></body></html>