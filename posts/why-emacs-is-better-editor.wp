<html><body><p>UPDATED: <span class="timestamp-wrapper"> <span class="timestamp">2014-01-15 Wed</span></span> </p> <p> Let's see an example in real life development. </p> <div id="outline-container-1" class="outline-3"> <h3 id="sec-1">Note</h3> <div class="outline-text-3" id="text-1">  <p>For people who does not get the key points of this article, here are the points: </p><ul> <li>Emacs has an embedded <b>javascript interpreter</b> which I extend a little bit. </li> <li>Other editors just use external tools or regular expression to do the semantic analysis. </li> <li>The difference of above two is bigger than the difference between machine gun and spear. </li> </ul>   </div>  </div>  <div id="outline-container-2" class="outline-3"> <h3 id="sec-2">Problem</h3> <div class="outline-text-3" id="text-2">  <p>I'm maintaining a big javascript file with thousands of lines of legacy code. </p> <p> My most urgent issue is how to list all the functions in that javascript file and jump to the definition of specific function easily. </p> <p> The modern enterprise application usually define the javascript function in some complex data structure. So most editors are not good at listing the functions. </p> <p> To understand what "complex" means, let's check some code from real world application: </p>   


<pre class="prettyprint ">

$(el.completeRegistrationForm).validate({
    ignore: " :hidden",
    rules : {
        password : {
            required : function () { return $(el.password).is(":visible"); }
        },
        accountNumber : {
            required : function () {
                return $(el.accountNumber).is(":visible");
            },
            digits : true
        }
        // ... I skipped next 200 lines which are similar to above lines

    },
    messages : {
        password: {
            required : "Please input a valid password"
        },
        accountNumber: {
            required : "Please provide a valid account number",
            digits : "Please enter only digits",
        }
        // ... I skipped next 200 lines which are similar to above lines
    }
});
</pre>

   <p> Most editors like Sublime Text 3 cannot display the javascript functions with meaningful context in this case. All you can see is only a bunch of functions with name "required".: <img src="/wp-content/uploads/2013/12/wpid-sublime-functions.png" alt="http://blog.binchen.org/wp-content/uploads/2013/12/wpid-sublime-functions.png"> </p> </div>  </div>  <div id="outline-container-3" class="outline-3"> <h3 id="sec-3">Solution</h3> <div class="outline-text-3" id="text-3">  <p>Emacs has a <a href="http://www.emacswiki.org/emacs/Js2Mode">js2-mode</a> which is basically a javascript interpreter written in lisp. It's created by <a href="http://www.emacswiki.org/emacs/SteveYegge">Steve Yegge</a> and now maintained by <a href="https://github.com/mooz/js2-mode">mooz</a>. </p> <p> Since js2-mode is a interpreter, basically it can do anythig you want. The key point is to understand the <a href="http://en.wikipedia.org/wiki/Abstract_syntax_tree">Abstract Syntax Tree (AST)</a> defined in js2-mode. </p>

<p> I already submitted the patch to mooz so everyone will enjoy this feature in the future. </p> <p> Here is the screen shot of emacs in old js2-mode, the UI is based on <a href="http://www.emacswiki.org/emacs/ImenuMode">Imenu Mode</a> and <a href="https://github.com/emacs-helm/helm">helm</a>: <img src="/wp-content/uploads/2013/12/wpid-emacs-functions.png" alt="http://blog.binchen.org/wp-content/uploads/2013/12/wpid-emacs-functions.png"> </p> <p> The screen shot after we applying the above patch:  <img src="/wp-content/uploads/2013/12/wpid-emacs-functions-improved.png" alt="http://blog.binchen.org/wp-content/uploads/2013/12/wpid-emacs-functions-improved.png"> </p> </div>  </div>  <div id="outline-container-4" class="outline-3"> <h3 id="sec-4">Summary</h3> <div class="outline-text-3" id="text-4">  <p>That's an example of beauty of Emacs. </p> <p> It gives you freedom and power. You can base your work on the top geeks like Steve Yegge and mooz. Just a few lines of lisp code to kick ass. </p></div>  </div>  <div id="outline-container-5" class="outline-3"> <h3 id="sec-5">Update</h3> <div class="outline-text-3" id="text-5">  <p>My patch is incorporated into js2-mode since version 20140114. You can install it through emacs package manager. </p> <p> After installing js2-mode, you need paste only one line code into your ~/.emacs to enable the feature: </p>   


<pre class="prettyprint ">
(js2-imenu-extras-mode)
</pre>



   <p> The UI to display the candidate in this actile is from package <a href="https://github.com/emacs-helm/helm">helm</a>. But there are many other UI front end for imenu instead of helm. </p> <p> The helm version should be 20140125.1101 or higher, you can install helm from <a href="http://melpa.milkbox.net/">melpa</a>. </p> <p> After installing helm, you can use command "M-x helm-imenu" to show the list of functions to jump to. Here is the screen shot how I use imenu in my <a href="https://github.com/redguardtoo/hello/raw/master/hello2.js">hello2.js</a>: </p> <p> <img src="/wp-content/uploads/2014/01/wpid-helm-imenu-and-js2-mode-nq8.png" alt="http://blog.binchen.org/wp-content/uploads/2014/01/wpid-helm-imenu-and-js2-mode-nq8.png"> </p></div> </div> </body></html>