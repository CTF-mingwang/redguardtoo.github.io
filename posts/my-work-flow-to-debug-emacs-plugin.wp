<html><body><p>Author: Chen Bin &lt;chenbin.sh AT gmail DOT com&gt; Created: <span class="timestamp-wrapper"> <span class="timestamp">2013-03-30 Sat</span></span> </p> <p> This is my quick guide on how to start debugging elisp. It's written for developers who are already experienced on debugging program but too lazy to read the <a href="http://www.gnu.org/software/emacs/manual/html_node/elisp/Edebug.html#Edebug">Edebug manual</a>. </p> <p> The most critical set up for the debugging is to set the hot key "C-h C-f" to the command "find-function" so you can jump the definition of the function easily. </p>   <pre class="src src-elisp">(global-set-key (kbd <span style="color: #70c0b1;">"C-h C-f"</span>) 'find-function)
</pre>   <p> Here is my workflow. </p>  <div id="outline-container-1" class="outline-3"> <h3 id="sec-1">start the debugging</h3> <div class="outline-text-3" id="text-1">  <ul> <li>Jump to the definition of the command (The hot key is "C-h C-f", as I mentioned before). </li> <li>Run "M-x edebug-defun" . This will set the breakpoint into the entry of the command. BTW, I run "M-x eval-defun" in the function body to undo "edebug-defun". </li> <li>Run the command to be debugged from Emacs </li> <li>Press "space" key (M-x edebug-step-mode) to debug the program step by step </li> <li>Watch the value of expression in the mini-buffer when you press "space" key </li> </ul>  </div>  </div>  <div id="outline-container-2" class="outline-3"> <h3 id="sec-2">basic debug operation</h3> <div class="outline-text-3" id="text-2">  <ul> <li>Press "i" key (M-x edebug-step-in) to step in   </li> <li>Press "o" key (M-x edebug-step-out) to step out  </li> <li>Press "b" key (M-x edebug-set-breakpoint) to set the break point (press "u" key unset break point. I don't use this though) </li> <li>Press "g" key (M-x edebug-go-mode) to continue </li> <li>Press "h" key (M-x edebug-goto-here) to proceed until at the current line </li> </ul>  </div>  </div>  <div id="outline-container-3" class="outline-3"> <h3 id="sec-3">Watch the variable and functions</h3> <div class="outline-text-3" id="text-3">  <ul> <li>Press "e" key (M-x edebug-eval-expression) to run the expression in the context outside of Edebug. Basically it means print a variable's value. Very useful.  </li> <li>Press "C-x C-e" key (M-x edebug-eval-last-sexp) in the context outside of Edebug. Similar to "e", useful if you are lazy to input the expression manually. </li> </ul>   <p> "Outside of Edebug" means you are only watching the variable's value. You will NOT change the status of program being debugged </p></div>  </div>  <div id="outline-container-4" class="outline-3"> <h3 id="sec-4">Set the variable</h3> <div class="outline-text-3" id="text-4">  <ul> <li>Press "M-:" key (M-x eval-expression) to evaluate the expression in the context of Edebug itself. </li> </ul>   <p> I usually don't do this. It's not my debugging style. </p></div> </div> </body></html>