<html><body><div id="outline-container-1" class="outline-3"> <h3 id="sec-1">Required tools</h3> <div class="outline-text-3" id="text-1">  <table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"> <caption></caption> <colgroup><col class="left"><col class="left"><col class="left"> </colgroup> <thead> <tr><th scope="col" class="left">Name</th><th scope="col" class="left">Description</th><th scope="col" class="left">Minimum version</th></tr> </thead> <tbody> <tr><td class="left">org-mode</td><td class="left">create org-file which could be converted to odt file</td><td class="left">7.8</td></tr> <tr><td class="left">scrot</td><td class="left">command line tool to take screen shot</td><td class="left">any version</td></tr> <tr><td class="left">libreoffice</td><td class="left">convert odt to word document</td><td class="left">any version</td></tr> <tr><td class="left">xsel</td><td class="left">X clipboard tool</td><td class="left">any version</td></tr> </tbody> </table>  </div>  </div>  <div id="outline-container-2" class="outline-3"> <h3 id="sec-2">Work flow</h3> <div class="outline-text-3" id="text-2">   </div>  <div id="outline-container-2-1" class="outline-4"> <h4 id="sec-2-1">Use scrot to take screen shot and put its full path into clipboard</h4> <div class="outline-text-4" id="text-2-1">     


<pre class="prettyprint ">
scrot '%H%M%S-%d_$wx$h.png' -e 'mkdir -p ~/screenshot;mv $f ~/screenshot/;echo ~/screenshot/$f|tr -d \"\\n\"|xsel -ib;'
</pre>



   </div>  </div>  <div id="outline-container-2-2" class="outline-4"> <h4 id="sec-2-2">Create org file in Emacs and insert the path of screen shot</h4> <div class="outline-text-4" id="text-2-2">  <p>Actually I use below elisp command to do the insertion for me. </p>   


<pre class="prettyprint lang-lisp">
(defun insert-file-link-from-clipboard ()
  "Make sure the full path of file exist in clipboard. This command will convert
The full path into relative path and insert it as a local file link in org-mode"
  (interactive)
  (let (str)
    (with-temp-buffer
      (shell-command
       (cond
        ((eq system-type 'cygwin) "getclip")
        ((eq system-type 'darwin) "pbpaste")
        (t "xsel -ob")
        )
       1)
      (setq str (buffer-string))
      )

    ;; convert to relative path (relative to current buffer) if possible
    (let ((m (string-match (file-name-directory (buffer-file-name)) str) ))
      (when m
        (if (= 0 m )
            (setq str (substring str (length (file-name-directory (buffer-file-name)))))
          )
        )
        (insert (format "[[file:%s]]" str))
      )
    ))
</pre>


  </div>  </div>  <div id="outline-container-2-3" class="outline-4"> <h4 id="sec-2-3">Export the org to odt file in Emacs</h4> <div class="outline-text-4" id="text-2-3">  <p>Run the command "org-export" whose hot key is "C-c C-e". </p> </div>  </div>  <div id="outline-container-2-4" class="outline-4"> <h4 id="sec-2-4">Convert the odt file into word file in Emacs</h4> <div class="outline-text-4" id="text-2-4">  <p>This is automatically done if you insert below code into your ~/.emacs: </p>   


<pre class="prettyprint lang-lisp">
(setq org-export-odt-preferred-output-format "doc")
</pre>



   <p> Basically this flag make emacs find the binary "soffice" which is from libreoffice and use the CLI to do the conversion thing. If you are interested in what CLI org-mode uses, "C-h v org-export-odt-convert-processes" in Emacs. </p> </div>  </div>  <div id="outline-container-2-5" class="outline-4"> <h4 id="sec-2-5">Tips</h4> <div class="outline-text-4" id="text-2-5">  <p>If you need insert page break in the exported document, insert below line into you org file: </p>   


<pre class="example">
#+ODT: &lt;text:p text:style-name="PageBreak"/&gt;
</pre>



  </div> </div> </div> </body></html>