<html><body><p>  我的结论,Emacs23自带的semantic简单可用. </p> <div id="outline-container-1" class="outline-3"> <h3 id="sec-1">Cedet1.0</h3> <div class="outline-text-3" id="text-1">  <p>   (require 'semantic-ia)后一些函数可用. </p> <p>    我没有试出来,和我安装的emacs是terminal版本有关(Cedet下的semantic-ia需要一个GUI介面的popup-menu). </p> <p>    这也是游人探讨<a href="http://www.emacswiki.org/emacs/AutoComplete">Auto Complete</a>接合semantic-ia的原因,因为AutoComplete已经完美实现了popup-menu. </p> <p>    缺点,semantic做后台语法解析的时候emacs会失去响应几妙种(我的硬件配置很好,intel i3 双核,4G内存),有时候会导致emacs退出. </p> </div>  </div>  <div id="outline-container-2" class="outline-3"> <h3 id="sec-2">Emacs23自带的semantic</h3> <div class="outline-text-3" id="text-2">  <p>   没有semantic-ia. </p> <p>    semantic-analyze-possible-completion(快捷键为C-c , l)较符合要求,可惜这个函数只是打印候选字符串在另一个buffer.需用hippie-expand(快捷键为M-/)选择. </p> <p>    启动semantic-mode在emacs23中很简单,M-x semantic-mode即可. </p> </div>  </div>  <div id="outline-container-3" class="outline-3"> <h3 id="sec-3">Clang</h3> <div class="outline-text-3" id="text-3">  <p>   速度极快,<a href="http://www.emacswiki.org/emacs/AutoComplete">AutoComplete</a> 上有几个接合Clang和AutoComple的方案(<a href="https://llvm.org/svn/llvm-project/cfe/trunk/utils/clang-completion-mode.el">其中一个</a> 为clang官方提供演示原理,我不建议使用). </p> <p>    通过elpa安装auto-complete-clang,试用后非常完美,智能且响应速度极快,支持Mac/Cygwin/Linux. </p> <p>    如果做语法实时检查,可以用flymake,需要提供完整的CXXFLAG给clang.如果用CMake生成Makefile的话,可在flags.make中轻易得到. </p> <p>    顺便说一下,我个人非常喜爱CMake,是构建打包配置管理的最佳工具.我以后所有的C++项目都将用CMake. </p></div> </div> </body></html>