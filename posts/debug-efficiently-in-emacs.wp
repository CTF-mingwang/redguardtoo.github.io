
<p>Please note:
</p><ul>
<li>I use javascript as a use case. The solution is <b>generic</b> enough to be applied to <b>any language</b>. At the end of the article, Emacs Lisp is used as another example.
</li>
<li>I'm good at most debuggers. The point of this article is to deal with <b>more difficult issues</b> the debugger can not handle.
</li>
<li>My code quality is fine. It handles all the corner cases I've met. For example, single quote and double quotes will be escaped properly.
</li>
</ul>



<div id="outline-container-1" class="outline-3">
<h3 id="sec-1">Problem</h3>
<div class="outline-text-3" id="text-1">

<p>As a freelancer I am often required to debug legacy javascript code from some huge "enterprise"" applications.
</p>
<p>
The only way to debug such application is to insert as many as possible logging code, watch the output, and think.
</p>
<p>
So my problem is how to insert logging code as quickly as possible.
</p>
</div>

</div>

<div id="outline-container-2" class="outline-3">
<h3 id="sec-2">Solution</h3>
<div class="outline-text-3" id="text-2">

<p>My solution is <a href="https://github.com/capitaomorte/yasnippet">Yasnippet</a>. Yasnippet allow me to insert executable Emacs Lisp code in its snippet. I will Sotake full advantage of that feature. 
</p>
</div>

</div>

<div id="outline-container-3" class="outline-3">
<h3 id="sec-3">Logging simple JS variable</h3>
<div class="outline-text-3" id="text-3">

<p>Given a variable name like "var1", I need insert javascript code as below:
</p>



<pre class="prettyprint lang-javascript">
console.log("var1=", var1)
</pre>



<p>
Snippet:
<a href="https://github.com/redguardtoo/emacs.d/blob/master/snippets/js-mode/logobject.yasnippet">https://github.com/redguardtoo/emacs.d/blob/master/snippets/js-mode/logobject.yasnippet</a>
</p>
<p>
This snippet need you input variable name once.
</p>
</div>

</div>

<div id="outline-container-4" class="outline-3">
<h3 id="sec-4">Logging complex JS variable</h3>
<div class="outline-text-3" id="text-4">

<p>In real world, the JS variable is often a string like "MyController.servicea.find('.class').attr1" which I hate to type.
</p>
<p>
So the solution is that I copy the JS variable into kill ring where my snippet will read the variable name.
</p>
<p>
Snippet:
<a href="https://github.com/redguardtoo/emacs.d/blob/master/snippets/js-mode/log-recent-kill-ring.yasnippet">https://github.com/redguardtoo/emacs.d/blob/master/snippets/js-mode/log-recent-kill-ring.yasnippet</a>
</p>
</div>

</div>

<div id="outline-container-5" class="outline-3">
<h3 id="sec-5">Logging JS function name when it's called</h3>
<div class="outline-text-3" id="text-5">

<p>In below example, I need insert  "console.log('hello is called');" in function "hello":
</p>



<pre class="prettyprint lang-javascript">
function hello() {
  console.log('hello is called');
}
</pre>



<p>
Snippet:
<a href="https://github.com/redguardtoo/emacs.d/blob/master/snippets/js-mode/log-which-function.yasnippet">https://github.com/redguardtoo/emacs.d/blob/master/snippets/js-mode/log-which-function.yasnippet</a>
</p>
<p>
This snippet use the Emacs command `which-function`. If you read the code of `which-function`, you will find that it's <a href="http://www.emacswiki.org/emacs/ImenuMode">Imenu-mode</a>
who actually extracts the function name. But Imenu-mode requires you pre-define <b>enough regular expressions</b>. 
</p>
<p>
Please check <a href="https://github.com/redguardtoo/emacs.d/blob/master/lisp/init-javascript.el">https://github.com/redguardtoo/emacs.d/blob/master/lisp/init-javascript.el</a>. I have defined many regular expressions for <a href="https://angularjs.org/">AngularJS</a> and JQuery.
</p>
<p>
The regular expressions could be used in <b>both</b> js-mode and js2-mode.
</p>
</div>

</div>

<div id="outline-container-6" class="outline-3">
<h3 id="sec-6">Logging JS function name with its parameters</h3>
<div class="outline-text-3" id="text-6">

<p>JS example:
</p>



<pre class="prettyprint lang-javascript">
function hello(v1, v2,
               v3, v4) {
  console.log("v1=", v1, "v2=", v2, "v3=", v3, "v4=", v4);
}
</pre>



<p>
I copy the parameter of JS function named "hello". It's just the content between "hello(" and ")", then Emacs Lisp code embedded in the snippet will parse and output the right content from kill ring.
</p>
<p>
Snippet:
<a href="https://github.com/redguardtoo/emacs.d/blob/master/snippets/js-mode/log-which-function-with-para.yasnippet">https://github.com/redguardtoo/emacs.d/blob/master/snippets/js-mode/log-which-function-with-para.yasnippet</a>
</p>
<p>
BTW, since I use <a href="http://www.emacswiki.org/Evil">Evil</a>, copy the parameter into kill-ring is as simple as pressing "yi(".
</p>
</div>

<div id="outline-container-7" class="outline-3">
<h3 id="sec-7">Bonus</h3>
<div class="outline-text-3" id="text-7">

<p>Similar snippets for Emacs Lisp are defined <a href="https://github.com/redguardtoo/emacs.d/tree/master/snippets/emacs-lisp-mode">HERE</a>.
</p></div>
</div>
